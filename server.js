import express from "express";
import { exec } from "child_process";
import { v4 as uuidv4 } from "uuid";
import fs from "fs";
import path from "path";

const app = express();
app.use(express.json());

const PORT = process.env.PORT || 3000;

// –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ
const videoList = [
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_8005.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_8003.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_8002.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7996.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7729.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7727.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7720.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7700.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7699.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7651.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7645.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7567.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7564.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7556.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7545.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7439.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7428.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7423.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7422.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7420.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_7409.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_6324.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_5580.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_img_5206.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_3.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_2.mp4",
  "https://1ogorod.ru/wp-content/uploads/2025/10/final_mute_short_1.mp4"
];

let currentVideoIndex = 0;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ ffmpeg/ffprobe
function checkFFmpeg() {
  return new Promise((resolve, reject) => {
    exec("ffmpeg -version", (err) => {
      if (err) return reject("ffmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω");
      exec("ffprobe -version", (err2) => {
        if (err2) return reject("ffprobe –Ω–µ –Ω–∞–π–¥–µ–Ω");
        resolve();
      });
    });
  });
}

// –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è ffmpeg
function escapeText(text) {
  return text
    .replace(/\\/g, '\\\\')
    .replace(/'/g, "\\'")
    .replace(/:/g, '\\:')
    .replace(/\[/g, '\\[')
    .replace(/\]/g, '\\]')
    .replace(/,/g, '\\,');
}

// –ü–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ (—Ü–∏–∫–ª–∏—á–Ω–æ)
function getNextVideo() {
  const video = videoList[currentVideoIndex];
  currentVideoIndex = (currentVideoIndex + 1) % videoList.length;
  return video;
}

app.post("/merge", async (req, res) => {
  try {
    const { text1, text2 } = req.body;
    
    if (!text1 || !text2) {
      return res.status(400).json({ error: "text1 –∏ text2 –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
    }

    fs.mkdirSync("/tmp/uploads", { recursive: true });

    const videoUrl = getNextVideo();
    const videoFile = path.join("/tmp/uploads", `${uuidv4()}.mp4`);
    const finalFile = path.join("/tmp/uploads", `${uuidv4()}_final.mp4`);

    console.log(`–í—ã–±—Ä–∞–Ω–æ –≤–∏–¥–µ–æ: ${videoUrl}`);

    // 1. –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
    await new Promise((resolve, reject) => {
      exec(`curl -s -L "${videoUrl}" -o ${videoFile}`, (err) => {
        if (err) reject("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ");
        else resolve();
      });
    });

    // 2. –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—ã
    const safeText1 = escapeText(text1);
    const safeText2 = escapeText(text2);

    // 3. –°–æ–∑–¥–∞—ë–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤
    // text1: –±–µ–ª—ã–π –Ω–∞ —Ä–∞–∑–º—ã—Ç–æ–º —á—ë—Ä–Ω–æ–º —Ñ–æ–Ω–µ, —Å–≤–µ—Ä—Ö—É, —Å –Ω–∞—á–∞–ª–∞ –≤–∏–¥–µ–æ
    // text2: –∂—ë–ª—Ç—ã–π, –ø–æ–¥ text1, –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å 3-–π —Å–µ–∫—É–Ω–¥—ã
    const fontPath = "/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf"; // Montserrat –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º DejaVu –∫–∞–∫ fallback
    
    const filterComplex = `
[0:v]trim=duration=10,setpts=PTS-STARTPTS[trimmed];
[trimmed]drawtext=text='${safeText1}':fontfile=${fontPath}:fontsize=38:fontcolor=white:
box=1:boxcolor=black@0.6:boxborderw=15:
x=(w-text_w)/2:y=80:
enable='between(t,0,10)'[text1];
[text1]drawtext=text='${safeText2}':fontfile=${fontPath}:fontsize=38:fontcolor=yellow:
x=(w-text_w)/2:y=140:
enable='between(t,3,10)'[output]
`.replace(/\n/g, '');

    // 4. –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±—Ä–µ–∑–∫—É –¥–æ 10 —Å–µ–∫ –∏ –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
    await new Promise((resolve, reject) => {
      const cmd = `ffmpeg -y -i ${videoFile} -filter_complex "${filterComplex}" -map "[output]" -map 0:a? -t 10 -c:a copy ${finalFile}`;
      
      console.log("–ö–æ–º–∞–Ω–¥–∞ ffmpeg:", cmd);
      
      exec(cmd, (err, stdout, stderr) => {
        if (err) {
          console.error("–û—à–∏–±–∫–∞ ffmpeg:", stderr);
          reject("–û—à–∏–±–∫–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞");
        } else {
          resolve();
        }
      });
    });

    // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    res.download(finalFile, "video_with_text.mp4", (err) => {
      // –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      try {
        fs.unlinkSync(videoFile);
        fs.unlinkSync(finalFile);
      } catch (e) {
        console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:", e);
      }
    });

  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:", e);
    res.status(500).json({ error: e.toString() });
  }
});

// Health check endpoint
app.get("/", (req, res) => {
  res.json({ 
    status: "OK", 
    videosTotal: videoList.length,
    currentIndex: currentVideoIndex 
  });
});

// –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ ffmpeg
checkFFmpeg()
  .then(() => {
    app.listen(PORT, () => {
      console.log(`üöÄ Server running on port ${PORT}`);
      console.log(`üìπ Loaded ${videoList.length} videos`);
    });
  })
  .catch(err => {
    console.error("‚ùå –û—à–∏–±–∫–∞: ", err);
    process.exit(1);
  });
